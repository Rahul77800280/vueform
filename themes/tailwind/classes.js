// prefix

const checkbox = {
  input: 'flex-shrink-0 appearance-none bg-white transition duration-200 ease-in-out cursor-pointer form-border form-border-color mr-1.5 focus:form-ring checked:form-bg-check-white checked:border-0',
  input_enabled: 'checked:form-bg-primary',
  input_disabled: 'form-bg-disabled checked:form-border checked:form-border-color',
  input_sm: 'form-w-checkbox-sm form-h-checkbox-sm form-rounded-sm mt-0.75',
  input_md: 'form-w-checkbox form-h-checkbox form-rounded mt-1',
  input_lg: 'form-w-checkbox-lg form-h-checkbox-lg form-rounded-lg mt-1',
  $input: (classes, { isDisabled, Size }) => ([
    classes.input,
    classes[`input_${Size}`],
    isDisabled ? classes.input_disabled : classes.input_enabled
  ]),
}

const radio = {
  input: 'flex-shrink-0 appearance-none bg-white transition duration-200 ease-in-out cursor-pointer rounded-full form-border form-border-color mr-1.5 focus:form-ring checked:form-bg-radio-white checked:border-0',
  input_enabled: 'checked:form-bg-primary',
  input_disabled: 'form-bg-disabled checked:form-border checked:form-border-color',
  input_sm: 'form-w-checkbox-sm form-h-checkbox-sm mt-0.75',
  input_md: 'form-w-checkbox form-h-checkbox mt-1',
  input_lg: 'form-w-checkbox-lg form-h-checkbox-lg mt-1',
  $input: (classes, { isDisabled, Size }) => ([
    classes.input,
    classes[`input_${Size}`],
    isDisabled ? classes.input_disabled : classes.input_enabled
  ]),
}

const text = {
  input: 'w-full form-border form-border-color z-1 transition-shadow addon-before:form-rounded-l-none outline-none addon-after:form-rounded-r-none',
  input_enabled: 'focus:form-ring',
  input_disabled: 'form-bg-disabled form-text-disabled',
  input_sm: 'form-p-input-sm form-rounded-sm form-text-sm',
  input_md: 'form-p-input form-rounded',
  input_lg: 'form-p-input-lg form-rounded-lg form-text-lg with-floating:form-p-input-floating-lg',
  $input: (classes, { isDisabled, Size }) => ([
    classes.input,
    classes[`input_${Size}`],
    isDisabled ? classes.input_disabled : classes.input_enabled
  ]),
}

const editor = {
  input: 'form-border form-border-color form-rounded',
  input_enabled: '',
  input_disabled: 'is-disabled form-bg-disabled form-text-disabled',
  input_focused: 'form-ring',
  input_sm: 'form-editor-sm',
  input_md: '',
  input_lg: 'form-editor-lg',
  $input: (classes, { isDisabled, focused, Size }) => ([
    classes.input,
    classes[`input_${Size}`],
    isDisabled ? classes.input_disabled : classes.input_enabled,
    focused ? classes.input_focused : null,
  ]),
}

const select = {
  container: 'relative mx-auto w-full flex items-center justify-end box-border cursor-pointer form-border form-border-color bg-white text-base leading-snug outline-none',
  container_sm: 'form-rounded-sm',
  container_md: 'form-rounded',
  container_lg: 'form-rounded-lg',
  containerDisabled: 'cursor-default form-bg-disabled text-gray-400',
  containerOpen: '!rounded-b-none',
  containerOpenTop: '!rounded-t-none',
  containerActive: 'form-ring',
  search: 'w-full absolute inset-0 outline-none appearance-none box-border border-0 font-sans bg-white',
  search_sm: 'form-text-sm form-rounded-sm form-pl-input-sm',
  search_md: 'form-rounded form-pl-input',
  search_lg: 'form-text-lg form-rounded-lg form-pl-input-lg with-floating:form-p-input-floating-lg',
  placeholder: 'flex items-center h-full absolute left-0 top-0 pointer-events-none bg-transparent leading-snug text-gray-500',
  placeholder_sm: 'form-pl-input-sm',
  placeholder_md: 'form-pl-input',
  placeholder_lg: 'form-pl-input-lg',
  caret: 'mask-bg mask-form-caret bg-gray-500 w-2.5 h-4 py-px box-content relative z-10 flex-shrink-0 flex-grow-0 transition-transform transform pointer-events-none',
  caret_sm: 'form-mr-input-sm',
  caret_md: 'form-mr-input',
  caret_lg: 'form-mr-input-lg',
  caretOpen: 'rotate-180 pointer-events-auto',
  clear: 'relative z-10 opacity-40 transition duration-300 flex-shrink-0 flex-grow-0 flex hover:opacity-80',
  clear_sm: 'form-pr-input-sm',
  clear_md: 'form-pr-input',
  clear_lg: 'form-pr-input-lg',
  clearIcon: 'mask-bg mask-form-remove bg-black w-2.5 h-4 py-px box-content inline-block',
  spinner: 'mask-bg mask-form-spinner form-bg-primary w-4 h-4 z-10 animate-spin flex-shrink-0 flex-grow-0',
  spinner_sm: 'form-mr-input-sm',
  spinner_md: 'form-mr-input',
  spinner_lg: 'form-mr-input-lg',
  dropdown: 'max-h-60 absolute -left-px -right-px bottom-0 transform translate-y-full form-border form-border-color -mt-px overflow-y-scroll z-50 bg-white flex flex-col',
  dropdown_sm: 'form-rounded-b-sm',
  dropdown_md: 'form-rounded-b',
  dropdown_lg: 'form-rounded-b-lg',
  dropdownTop: '-translate-y-full top-px bottom-auto flex-col-reverse !rounded-b-none',
  dropdownTop_sm: 'form-rounded-t-sm',
  dropdownTop_md: 'form-rounded-t',
  dropdownTop_lg: 'form-rounded-t-lg',
  dropdownHidden: 'hidden',
  options: 'flex flex-col p-0 m-0 list-none',
  optionsTop: 'flex-col-reverse',
  group: 'p-0 m-0',
  groupLabel: 'flex text-sm box-border items-center justify-start text-left py-1 font-semibold bg-gray-200 cursor-default leading-normal',
  groupLabel_sm: 'form-px-input-sm',
  groupLabel_md: 'form-px-input',
  groupLabel_lg: 'form-px-input-lg',
  groupLabelPointable: 'cursor-pointer',
  groupLabelPointed: 'bg-gray-300 text-gray-700',
  groupLabelSelected: 'form-bg-primary-darker text-white',
  groupLabelDisabled: 'bg-gray-100 text-gray-400 cursor-not-allowed',
  groupLabelSelectedPointed: 'form-bg-primary-darker text-white opacity-90',
  groupLabelSelectedDisabled: 'text-white form-bg-primary-darker bg-opacity-50 cursor-not-allowed',
  groupOptions: 'p-0 m-0',
  option: 'flex items-center justify-start box-border text-left cursor-pointer leading-snug',
  option_sm: 'form-px-input-sm form-py-input-border-sm',
  option_md: 'form-px-input form-py-input-border',
  option_lg: 'form-px-input-lg form-py-input-border-lg',
  optionPointed: 'text-gray-800 bg-gray-100',
  optionSelected: 'text-white form-bg-primary',
  optionDisabled: 'form-text-disabled cursor-not-allowed',
  optionSelectedPointed: 'text-white form-bg-primary opacity-90',
  optionSelectedDisabled: 'text-white form-bg-primary bg-opacity-50 cursor-not-allowed',
  fakeInput: 'bg-transparent absolute left-0 right-0 -bottom-px w-full h-px border-0 p-0 appearance-none outline-none text-transparent',
  spacer: 'box-content',
  spacer_sm: 'form-h-input-height-inner-sm',
  spacer_md: 'form-h-input-height-inner',
  spacer_lg: 'form-h-input-height-inner-lg',
  noOptions: 'leading-normal text-gray-600 bg-white',
  noOptions_sm: 'form-p-input-sm form-text-sm',
  noOptions_md: 'form-p-input',
  noOptions_lg: 'form-p-input-lg form-text-lg',
  noResults: 'leading-normal text-gray-600 bg-white',
  noResults_sm: 'form-p-input-sm form-text-sm',
  noResults_md: 'form-p-input',
  noResults_lg: 'form-p-input-lg form-text-lg',
  $container: (classes, { Size }) => ([
    classes.select.container,
    classes.select[`container_${Size}`],
  ]),
  $search: (classes, { Size }) => ([
    classes.select.search,
    classes.select[`search_${Size}`],
  ]),
  $placeholder: (classes, { Size }) => ([
    classes.select.placeholder,
    classes.select[`placeholder_${Size}`],
  ]),
  $caret: (classes, { Size }) => ([
    classes.select.caret,
    classes.select[`caret_${Size}`],
  ]),
  $clear: (classes, { Size }) => ([
    classes.select.clear,
    classes.select[`clear_${Size}`],
  ]),
  $spinner: (classes, { Size }) => ([
    classes.select.spinner,
    classes.select[`spinner_${Size}`],
  ]),
  $dropdown: (classes, { Size }) => ([
    classes.select.dropdown,
    classes.select[`dropdown_${Size}`],
  ]),
  $dropdownTop: (classes, { Size }) => ([
    classes.select.dropdownTop,
    classes.select[`dropdownTop_${Size}`],
  ]),
  $groupLabel: (classes, { Size }) => ([
    classes.select.groupLabel,
    classes.select[`groupLabel_${Size}`],
  ]),
  $option: (classes, { Size }) => ([
    classes.select.option,
    classes.select[`option_${Size}`],
  ]),
  $spacer: (classes, { Size }) => ([
    classes.select.spacer,
    classes.select[`spacer_${Size}`],
  ]),
  $noOptions: (classes, { Size }) => ([
    classes.select.noOptions,
    classes.select[`noOptions_${Size}`],
  ]),
  $noResults: (classes, { Size }) => ([
    classes.select.noResults,
    classes.select[`noResults_${Size}`],
  ]),
}

export default {
  // Elements
  ButtonElement: {
    container: '',
    button: 'inline-block transition form-bg-primary text-white focus:outline-none',
    button_enabled: 'cursor-pointer hover:form-bg-primary-darker focus:form-ring',
    button_disabled: 'opacity-60 cursor-not-allowed',
    button_loading: 'form-bg-primary text-white form-bg-spinner-white opacity-60 cursor-not-allowed',
    button_sm: 'form-p-button-sm form-rounded-sm',
    button_md: 'form-p-button form-rounded',
    button_lg: 'form-p-button-lg form-rounded-lg',
    $button: (classes, { isDisabled, isLoading, buttonClass, Size }) => ([
      classes.button,
      classes[`button_${Size}`],
      isDisabled ? classes.input_disabled : null,
      !isDisabled && !isLoading ? classes.button_enabled : null,
      isLoading ? classes.button_loading : null,
      buttonClass,
    ]),
  },
  CheckboxElement: {
    container: '',
    wrapper: 'flex align-start',
    wrapper_sm: 'form-pt-input-border-sm',
    wrapper_md: 'form-pt-input-border',
    wrapper_lg: 'form-pt-input-border-lg',
    text: 'cursor-pointer',
    ...checkbox,
    $wrapper: (classes, { Size }) => ([
      classes.wrapper,
      classes[`wrapper_${Size}`]
    ]),
  },
  CheckboxgroupElement: {
    container: '',
    wrapper: 'flex flex-col justify-start form-pt-input-border',
  },
  CheckboxgroupElement_pills: {
    container: '',
    wrapper: 'grid grid-flow-col grid',
  },
  CheckboxgroupElement_blocks: {
    container: '',
    wrapper: 'flex flex-col justify-start',
  },
  DateElement: {
    container: '',
    inputContainer: 'w-full flex',
    ...text,
  },
  DatesElement: {
    container: '',
    inputContainer: 'w-full flex',
    ...text,
  },
  EditorElement: {
    container: '',
    ...editor,
  },
  FileElement: {
    container: '',
    container_removing: 'opacity-50',
    button: 'inline-block transition focus:form-ring focus:outline-none',
    button_enabled: 'bg-gray-100 cursor-pointer hover:bg-gray-200',
    button_disabled: 'opacity-50 bg-gray-100 cursor-not-allowed',
    button_sm: 'form-p-button-sm form-rounded-sm',
    button_md: 'form-p-button form-rounded',
    button_lg: 'form-p-button-lg form-rounded-lg',
    $container: (classes, { removing }) => ([
      classes.container,
      removing ? classes.container_removing : null,
    ]),
    $button: (classes, { isDisabled, preparing, Size }) => ([
      classes.button,
      classes[`button_${Size}`],
      !isDisabled && !preparing ? classes.button_enabled : null,
      isDisabled || preparing ? classes.button_disabled : null,
    ]),
  },
  GroupElement: {
    container: '',
    wrapper: 'form-row-group flex flex-wrap',
  },
  ListElement: {
    container: '',
    list: '',
    list_disabled: '',
    list_sorting: '',
    listItem: 'form-row relative group ghost:opacity-60',
    handle: 'absolute left-4 top-0 transform -translate-x-full cursor-grab active:cursor-grabbing opacity-0 transition group-hover:opacity-100',
    handle_sm: 'form-w-input-height-sm form-h-input-height-sm',
    handle_md: 'form-w-input-height form-h-input-height',
    handle_lg: 'form-w-input-height-lg form-h-input-height-lg',
    handleIcon: 'mask-bg mask-form-sort-handle bg-black mask-size-2.8 block w-full h-full',
    remove: 'absolute z-1 w-4 h-4 box-content p-0.5 top-px form-left-gutter bg-gray-200 rounded-full transform -translate-x-1/2 -translate-y-1/2 transition opacity-0 hover:bg-gray-300 group-hover:opacity-100',
    removeIcon: 'mask-bg mask-form-remove-light bg-gray-500 mask-size-3 block w-full h-full',
    add: 'inline-block form-bg-primary text-white transition hover:form-bg-primary-darker',
    add_sm: 'form-rounded-sm text-0.5sm px-2.5 py-1',
    add_md: 'form-rounded text-sm px-2.5 py-1',
    add_lg: 'form-rounded-lg text-sm px-3 py-1.5',
    $list: (classes, { isDisabled, sorting }) => ([
      classes.list,
      isDisabled ? classes.list_disabled : null,
      sorting ? classes.list_sorting : null,
    ]),
    $handle: (classes, { Size }) => ([
      classes.handle,
      classes[`handle_${Size}`],
    ]),
    $add: (classes, { Size }) => ([
      classes.add,
      classes[`add_${Size}`],
    ]),
  },
  LocationElement: {
    container: '',
    inputContainer: 'w-full flex',
    ...text,
  },
  MultifileElement: {
    container: '',
    list: '',
    list_file: '',
    list_file_sm: 'form-mt-0.5gutter-sm',
    list_file_md: 'form-mt-0.5gutter',
    list_file_lg: 'form-mt-0.5gutter-lg',
    list_image: '',
    list_image_sm: 'form-mt-gutter-sm',
    list_image_md: 'form-mt-gutter',
    list_image_lg: 'form-mt-gutter-lg',
    list_gallery: 'flex flex-wrap',
    list_gallery_sm: 'form-mt-0.5gutter-sm',
    list_gallery_md: 'form-mt-0.5gutter',
    list_gallery_lg: 'form-mt-0.5gutter-lg',
    list_disabled: '',
    list_sorting: '',
    spacer: '',
    spacer_sm: 'form-mb-0.5gutter-sm',
    spacer_md: 'form-mb-0.5gutter',
    spacer_lg: 'form-mb-0.5gutter-lg',
    listItem: 'relative group ghost:opacity-60',
    listItem_file: 'form-row',
    listItem_file_sm: '-form-mt-0.5gutter-sm',
    listItem_file_md: '-form-mt-0.5gutter',
    listItem_file_lg: '-form-mt-0.5gutter-lg',
    listItem_image: 'form-row',
    listItem_image_sm: '-form-mt-0.5gutter-sm',
    listItem_image_md: '-form-mt-0.5gutter',
    listItem_image_lg: '-form-mt-0.5gutter-lg',
    listItem_gallery: '',
    listItem_gallery_sm: 'form-mr-0.5gutter-sm form-mb-0.5gutter-sm',
    listItem_gallery_md: 'form-mr-0.5gutter form-mb-0.5gutter',
    listItem_gallery_lg: 'form-mr-0.5gutter-lg form-mb-0.5gutter-lg',
    handle: '',
    handle_file: 'absolute left-4 top-0 transform -translate-x-full cursor-grab active:cursor-grabbing opacity-0 transition group-hover:opacity-100',
    handle_file_sm: 'form-w-input-height-sm form-h-input-height-sm',
    handle_file_md: 'form-w-input-height form-h-input-height',
    handle_file_lg: 'form-w-input-height-lg form-h-input-height-lg',
    handle_image: 'absolute left-4 top-0 transform -translate-x-full cursor-grab active:cursor-grabbing opacity-0 transition group-hover:opacity-100',
    handle_image_sm: 'form-w-input-height-sm form-h-input-height-sm',
    handle_image_md: 'form-w-input-height form-h-input-height',
    handle_image_lg: 'form-w-input-height-lg form-h-input-height-lg',
    handle_gallery: 'absolute w-4 h-4 box-content top-0.5 left-0.5 mt-px ml-px bg-gray-200 bg-center bg-no-repeat rounded-full transition opacity-0 group-hover:opacity-100 cursor-grab active:cursor-grabbing hover:bg-gray-300',
    handle_gallery_sm: '',
    handle_gallery_md: '',
    handle_gallery_lg: '',
    handleIcon: '',
    handleIcon_file: 'mask-bg mask-form-sort-handle bg-black mask-size-2.8 block w-full h-full',
    handleIcon_image: 'mask-bg mask-form-sort-handle bg-black mask-size-2.8 block w-full h-full',
    handleIcon_gallery: 'mask-bg mask-form-arrows bg-gray-700 mask-size-3 block w-full h-full',
    dnd: '',
    dnd_sm: 'form-mb-0.5gutter-sm',
    dnd_md: 'form-mb-0.5gutter',
    dnd_lg: 'form-mb-0.5gutter-lg',
    button: 'inline-block transition focus:form-ring focus:outline-none',
    button_enabled: 'bg-gray-100 cursor-pointer hover:bg-gray-200',
    button_disabled: 'opacity-50 bg-gray-100 cursor-not-allowed',
    button_sm: 'form-mb-0.5gutter-sm form-p-button-sm form-rounded-sm',
    button_md: 'form-mb-0.5gutter form-p-button form-rounded',
    button_lg: 'form-mb-0.5gutter-lg form-p-button-lg form-rounded-lg',
    $list: (classes, { isDisabled, sorting, view, Size }) => ([
      classes.list,
      isDisabled ? classes.list_disabled : null,
      sorting ? classes.list_sorting : null,
      classes[`list_${view}`],
      classes[`list_${view}_${Size}`],
    ]),
    $spacer: (classes, { Size }) => ([
      classes.spacer,
      classes[`spacer_${Size}`],
    ]),
    $listItem: (classes, { view, Size }) => ([
      classes.listItem,
      classes[`listItem_${view}`],
      classes[`listItem_${view}_${Size}`],
    ]),
    $handle: (classes, { view, Size }) => ([
      classes.handle,
      classes[`handle_${view}`],
      classes[`handle_${view}_${Size}`],
    ]),
    $handleIcon: (classes, { view }) => ([
      classes.handleIcon,
      classes[`handleIcon_${view}`],
    ]),
    $dnd: (classes, { Size }) => ([
      classes.dnd,
      classes[`dnd_${Size}`],
    ]),
    $button: (classes, { isDisabled, preparing, Size }) => ([
      classes.button,
      classes[`button_${Size}`],
      !isDisabled && !preparing ? classes.button_enabled : null,
      isDisabled || preparing ? classes.button_disabled : null,
    ]),
  },
  MultiselectElement: {
    container: '',
    input: 'w-full form-p-input form-border form-border-color form-rounded',
    input_enabled: 'focus:form-ring',
    input_disabled: 'form-bg-disabled form-text-disabled',
    inputWrapper: '',
    select: {
      ...select,
      multipleLabel: 'flex items-center h-full absolute left-0 top-0 pointer-events-none bg-transparent leading-snug',
      multipleLabel_sm: 'form-pl-input-sm',
      multipleLabel_md: 'form-pl-input',
      multipleLabel_lg: 'form-pl-input-lg with-floating:form-p-input-floating-lg',
      $multipleLabel: (classes, { Size }) => ([
        classes.select.multipleLabel,
        classes.select[`multipleLabel_${Size}`],
      ]),
    },
    $input: (classes, { isDisabled }) => ([
      classes.input,
      isDisabled ? classes.input_disabled : classes.input_enabled,
    ]),
  },
  ObjectElement: {
    container: '',
    wrapper: 'form-row-group flex flex-wrap',
  },
  RadioElement: {
    container: '',
    wrapper: 'flex align-start form-pt-input-border',
    text: 'cursor-pointer',
    ...radio,
  },
  RadiogroupElement: {
    container: '',
    wrapper: 'flex flex-col justify-start form-pt-input-border',
  },
  RadiogroupElement_pills: {
    container: '',
    wrapper: 'grid grid-flow-col grid',
  },
  RadiogroupElement_blocks: {
    container: '',
    wrapper: 'flex flex-col justify-start',
  },
  SelectElement: {
    container: '',
    input: 'w-full form-border form-border-color',
    input_enabled: 'focus:form-ring',
    input_disabled: 'form-bg-disabled form-text-disabled',
    input_sm: 'form-p-input-sm form-rounded-sm form-text-sm',
    input_md: 'form-p-input form-rounded',
    input_lg: 'form-p-input-lg form-rounded-lg form-text-lg with-floating:form-p-input-floating-lg',
    inputWrapper: 'relative',
    inputPlaceholder: 'absolute left-0 top-0 text-gray-500 pointer-events-none',
    inputPlaceholder_sm: 'form-p-input-border-sm',
    inputPlaceholder_md: 'form-p-input-border',
    inputPlaceholder_lg: 'form-p-input-border-lg',
    select: {
      ...select,
      singleLabel: 'flex items-center h-full max-w-full absolute left-0 top-0 pointer-events-none bg-transparent leading-snug pr-16 box-border',
      singleLabel_sm: 'form-pl-input-sm',
      singleLabel_md: 'form-pl-input',
      singleLabel_lg: 'form-pl-input-lg with-floating:form-p-input-floating-lg',
      singleLabelText: 'overflow-ellipsis overflow-hidden block whitespace-nowrap max-w-full',
      $singleLabel: (classes, { Size }) => ([
        classes.select.singleLabel,
        classes.select[`singleLabel_${Size}`],
      ]),
    },
    $input: (classes, { isDisabled, Size }) => ([
      classes.input,
      classes[`input_${Size}`],
      isDisabled ? classes.input_disabled : classes.input_enabled,
    ]),
    $inputPlaceholder: (classes, { Size }) => ([
      classes.inputPlaceholder,
      classes[`inputPlaceholder_${Size}`],
    ]),
  },
  SliderElement: {
    container: '',
    wrapper: 'mt-4',
    slider: {
      target: 'relative box-border user-select-none touch-none tap-highlight-transparent touch-callout-none disabled:cursor-not-allowed',
      focused: 'slider-focused',
      tooltipFocus: 'slider-tooltip-focus',
      tooltipDrag: 'slider-tooltip-drag',
      ltr: 'slider-ltr',
      rtl: 'slider-rtl',
      horizontal: 'slider-horizontal h-1.5',
      vertical: 'slider-vertical w-1.5 h-80',
      textDirectionRtl: 'slider-txt-rtl',
      textDirectionLtr: 'slider-txt-ltr',
      base: 'w-full h-full relative z-1 bg-gray-300 rounded',
      connects: 'w-full h-full relative overflow-hidden z-0 rounded',
      connect: 'absolute z-1 top-0 right-0 transform-origin-0 transform-style-flat h-full w-full form-bg-primary cursor-pointer tap:duration-300 tap:transition-transform disabled:form-bg-disabled-darker disabled:cursor-not-allowed',
      origin: 'slider-origin absolute z-1 top-0 right-0 transform-origin-0 transform-style-flat h-full w-full h:h-0 v:-top-full txt-rtl-h:left-0 txt-rtl-h:right-auto v:w-0 tap:duration-300 tap:transition-transform',
      handle: 'absolute rounded-full bg-white border-0 shadow-slider cursor-grab focus:outline-none h:w-4 h:h-4 h:-top-1.5 h:-right-2 txt-rtl-h:-left-2 txt-rtl-h:right-auto v:w-4 v:h-4 v:-bottom-2 v:-right-1.25 disabled:cursor-not-allowed focus:form-ring',
      touchArea: 'h-full w-full',
      tooltip: 'absolute block text-sm font-semibold whitespace-nowrap py-1 px-1.5 min-w-5 text-center text-white rounded border form-border-primary form-bg-primary transform h:-translate-x-1/2 h:left-1/2 v:-translate-y-1/2 v:top-1/2 disabled:form-bg-disabled-darker disabled:form-border-disabled-darker merge-h:translate-x-1/2 merge-h:left-auto merge-v:-translate-x-4 merge-v:top-auto tt-focus:hidden tt-focused:block tt-drag:hidden tt-dragging:block',
      tooltipTop: 'bottom-6 h:arrow-bottom merge-h:bottom-3.5',
      tooltipBottom: 'top-6 h:arrow-top merge-h:top-5',
      tooltipLeft: 'right-6 v:arrow-right merge-v:right-1',
      tooltipRight: 'left-6 v:arrow-left merge-v:left-7',
      tooltipHidden: 'slider-tooltip-hidden',
      active: 'slider-active shadow-slider-active cursor-grabbing',
      draggable: 'cursor-ew-resize v:cursor-ns-resize',
      tap: 'slider-state-tap',
      drag: 'slider-state-drag',
    }
  },
  StaticElement: {
    container: '',
    content: '',
    content_sm: 'form-pt-input-border-sm',
    content_md: 'form-pt-input-border',
    content_lg: 'form-pt-input-border-lg',
    $content: (classes, { Size }) => ([
      classes.content,
      classes[`content_${Size}`],
    ]),
  },
  TagsElement: {
    container: '',
    select: {
      ...select,
      tags: 'flex-grow flex-shrink flex flex-wrap items-center mt-1',
      tags_sm: 'form-pl-input-y-sm',
      tags_md: 'form-pl-input-y',
      tags_lg: 'form-pl-input-y-lg with-floating:form-p-input-floating-lg',
      tag: 'form-bg-primary text-white font-semibold py-px pl-2 rounded mr-1 mb-1 flex items-center whitespace-nowrap',
      tag_sm: 'text-0.5sm',
      tag_md: 'text-sm',
      tag_lg: 'text-sm',
      tagDisabled: 'pr-2 opacity-50',
      tagRemove: 'flex items-center justify-center p-1 mx-0.5 rounded-sm hover:bg-black hover:bg-opacity-10 group',
      tagRemoveIcon: 'mask-bg mask-form-remove bg-current inline-block w-3 h-3',
      tagsSearchWrapper: 'inline-block relative mx-1 mb-1 flex-grow flex-shrink h-full',
      tagsSearch: 'absolute inset-0 border-0 outline-none appearance-none p-0 text-base font-sans box-border w-full',
      tagsSearchCopy: 'invisible whitespace-pre-wrap inline-block h-px',
      singleLabelText: 'overflow-ellipsis overflow-hidden block whitespace-nowrap max-w-full',
      $tags: (classes, { Size }) => ([
        classes.select.tags,
        classes.select[`tags_${Size}`],
      ]),
      $tag: (classes, { Size }) => ([
        classes.select.tag,
        classes.select[`tag_${Size}`],
      ]),
    }
  },
  TextareaElement: {
    container: '',
    inputContainer: 'w-full flex',
    ...text,
  },
  TextElement: {
    container: '',
    inputContainer: 'w-full flex',
    ...text,
  },
  TextElement: {
    container: '',
    inputContainer: 'w-full flex',
    ...text,
  },
  ToggleElement: {
    container: '',
    wrapper: 'form-pt-input-border flex items-center',
    text: 'ml-2',
    toggle: {
      container: 'inline-block rounded-full outline-none focus:form-ring',
      toggle: 'flex rounded-full relative cursor-pointer transition items-center box-content border-2 leading-none',
      toggle_sm: 'w-11 h-4.5 text-xs',
      toggle_md: 'w-12 h-5 text-xs',
      toggle_lg: 'w-14 h-6 text-0.5sm',
      toggleOn: 'form-bg-primary form-border-primary justify-start text-white',
      toggleOff: 'bg-gray-300 border-gray-300 justify-end text-gray-700',
      toggleOnDisabled: 'form-bg-primary form-border-primary opacity-50 justify-start text-white cursor-not-allowed',
      toggleOffDisabled: 'bg-gray-300 border-gray-300 opacity-50 justify-end text-gray-700 cursor-not-allowed',
      handle: 'inline-block bg-white top-0 rounded-full absolute transition-all',
      handle_sm: 'w-4.5 h-4.5',
      handle_md: 'w-5 h-5',
      handle_lg: 'w-6 h-6',
      handleOn: 'left-full transform -translate-x-full',
      handleOff: 'left-0',
      handleOnDisabled: 'left-full transform -translate-x-full',
      handleOffDisabled: 'left-0',
      label: 'text-center border-box whitespace-nowrap select-none',
      label_sm: 'w-7',
      label_md: 'w-8',
      label_lg: 'w-9',
      $toggle: (classes, { Size }) => ([
        classes.toggle.toggle,
        classes.toggle[`toggle_${Size}`],
      ]),
      $handle: (classes, { Size }) => ([
        classes.toggle.handle,
        classes.toggle[`handle_${Size}`],
      ]),
      $label: (classes, { Size }) => ([
        classes.toggle.label,
        classes.toggle[`label_${Size}`],
      ]),
    }
  },
  TTextareaElement: {
    container: '',
    inputContainer: 'w-full flex',
    ...text,
  },
  TTextElement: {
    container: '',
    inputContainer: 'w-full flex',
    ...text,
  },
  TEditorElement: {
    container: '',
    ...editor,
  },

  // Wrappers
  DatepickerWrapper: {
    datepicker: '',
    calendarContainer: ''
  },
  EditorWrapper: {
    container: 'bg-white',
  },

  // Components
  DragAndDrop: {
    container: 'w-full border border-dashed transition inline-flex flex-col items-center justify-center p-6 cursor-pointer',
    container_inactive: 'form-border-color',
    container_active: 'form-border-primary form-bg-primary bg-opacity-20',
    container_enabled: '',
    container_disabled: 'opacity-50 bg-gray-50 cursor-not-allowed',
    icon: 'inline-block w-9 h-8 mask-bg mask-form-inbox-in form-bg-primary bg-opacity-100',
    title: 'font-semibold mt-3',
    description: '',
    $container: (classes, { dragging, disabled }) => ([
      classes.container,
      dragging ? classes.container_active : classes.container_inactive,
      disabled ? classes.container_disabled : classes.container_enabled,
    ]),
  },
  ElementAddon: {
    container: 'form-border form-border-color bg-gray-100 flex items-center',
    container_before: 'form-addon-before !border-r-0',
    container_after: 'form-addon-after !border-l-0 order-2',
    container_sm: 'form-p-input-sm',
    container_md: 'form-p-input',
    container_lg: 'form-p-input-lg',
    container_before_sm: 'form-rounded-l-sm',
    container_before_md: 'form-rounded-l',
    container_before_lg: 'form-rounded-l-lg',
    container_after_sm: 'form-rounded-r-sm',
    container_after_md: 'form-rounded-r',
    container_after_lg: 'form-rounded-r-lg',
    wrapper: '',
    $container: (classes, { type, Size }) => ([
      classes.container,
      classes[`container_${Size}`],
      classes[`container_${type}`],
      classes[`container_${type}_${Size}`],
    ]),
  },
  ElementDescription: {
    container: 'text-gray-500',
    container_sm: 'text-0.5sm mt-0.5',
    container_md: 'text-sm mt-1',
    container_lg: 'text-sm mt-1',
    $container: (classes, { Size }) => ([
      classes.container,
      classes[`container_${Size}`],
    ]),
  },
  ElementError: {
    container: 'text-red-500 block',
    container_sm: 'text-0.5sm mt-0.5',
    container_md: 'text-sm mt-1',
    container_lg: 'text-sm mt-1',
    $container: (classes, { Size }) => ([
      classes.container,
      classes[`container_${Size}`],
    ]),
  },
  ElementInfo: {
    container: 'inline-block w-3.5 h-3.5 form-bg-info relative ml-2 top-px cursor-pointer group',
    wrapper: 'absolute left-5 -top-0.5 -mt-px opacity-0 invisible group-hover:opacity-100 group-hover:form-visible transition z-20 w-52',
    content: 'bg-black bg-opacity-90 text-white rounded-md text-sm py-1 px-2.5 not-italic inline-block relative',
  },
  ElementLabel: {
    container: 'form-col pr-4',
    container_sm: 'form-py-input-border-sm',
    container_md: 'form-py-input-border',
    container_lg: 'form-py-input-border-lg',
    $container: (classes, { el$, Size }) => ([
      classes.container,
      classes[`container_${Size}`],
      !el$.inline ? el$.columnsClasses.label : null,
    ]),
  },
  ElementLabelFloating: {
    container: 'label-floating relative',
    label: 'absolute z-10 leading-px leading-none text-0.5xs text-gray-500 bg-white px-px transition whitespace-nowrap',
    label_sm: 'form-left-input-sm',
    label_md: 'form-left-input',
    label_lg: 'form-left-input-lg top-2.5',
    label_invisible: 'opacity-0 invisible',
    label_visible: 'opacity-100 visible',
    $label: (classes, { visible, Size }) => ([
      classes.label,
      classes[`label_${Size}`],
      visible ? classes.label_visible : classes.label_invisible
    ]),
  },
  ElementLayout: {
    container: 'form-col',
    container_error: 'has-error',
    outerWrapper: 'form-row flex flex-wrap',
    outerWrapper_single: '',
    outerWrapper_single_sm: 'form-mb-gutter-sm form-text-sm',
    outerWrapper_single_md: 'form-mb-gutter',
    outerWrapper_single_lg: 'form-mb-gutter-lg form-text-lg',
    outerWrapper_multiple: '',
    outerWrapper_multiple_sm: 'form-text-sm',
    outerWrapper_multiple_md: '',
    outerWrapper_multiple_lg: 'form-text-lg',
    innerContainer: 'flex-1',
    innerWrapperBefore: 'form-col w-full',
    innerWrapper: 'form-col',
    innerWrapperAfter: 'form-col w-full',
    $container: (classes, { el$ }) => ([
      classes.container,
      el$.columnsClasses.container,
      el$.classes.container,
      !el$.isStatic && el$.errors && !!el$.errors.length ? classes.container_error : null
    ]),
    $innerContainer:  (classes, { el$ }) => ([
      classes.innerContainer,
      el$.columnsClasses.innerContainer,
    ]),
    $innerWrapper:  (classes, { el$ }) => ([
      classes.innerWrapper,
      el$.columnsClasses.wrapper,
    ]),
    $outerWrapper:  (classes, { multiple, Size }) => ([
      classes.outerWrapper,
      multiple.value ? classes.outerWrapper_multiple : classes.outerWrapper_single,
      multiple.value ? classes[`outerWrapper_multiple_${Size}`] : classes[`outerWrapper_single_${Size}`],
    ]),
  },
  ElementLayoutInline: {
    container: 'flex',
    container_error: 'has-error',
    $container: (classes, { el$ }) => ([
      classes.container,
      !el$.isStatic && el$.errors && !!el$.errors.length ? classes.container_error : null
    ]),
  },
  ElementLoader: {
    container: 'relative z-10 order-1',
    loader: 'absolute w-4 h-4 form-mr-input right-full mask-bg mask-form-spinner form-bg-primary animate-spin',
    loader_sm: 'form-top-input-border-sm mt-0.5',
    loader_md: 'form-top-input-border mt-1',
    loader_lg: 'form-top-input-border-lg mt-1',
    $loader: (classes, { Size }) => ([
      classes.loader,
      classes[`loader_${Size}`],
    ]),
  },
  ElementMessage: {
    container: 'text-green-500 block',
    container_sm: 'text-0.5sm mt-0.5',
    container_md: 'text-sm mt-1',
    container_lg: 'text-sm mt-1',
    $container: (classes, { Size }) => ([
      classes.container,
      classes[`container_${Size}`],
    ]),
  },
  ElementText: {
    container: '',
    container_before: '',
    container_between: '',
    container_after: '',
    $container: (classes, { type }) => ([
      classes.container,
      classes[`container_${type}`]
    ]),
  },
  FormElements: {
    container: 'form-row flex flex-wrap'
  },
  FormErrors: {
    container: 'bg-red-100 text-red-500 py-3 px-5 rounded form-mb-gutter',
    error: '',
  },
  FormLanguage: {
    container: 'flex-grow flex-shrink w-full',
    wrapper: 'text-center py-2 px-4 block',
    wrapper_sm: 'form-rounded-sm',
    wrapper_md: 'form-rounded',
    wrapper_lg: 'form-rounded-lg',
    wrapper_inactive: 'form-text-primary',
    wrapper_active: 'text-white form-bg-primary',
    $wrapper: (classes, { selected, Size }) => ([
      classes.wrapper,
      classes[`wrapper_${Size}`],
      selected ? classes.wrapper_active : classes.wrapper_inactive
    ]),
  },
  FormLanguages: {
    container: 'flex items-center justify-between',
    container_sm: 'form-mb-gutter form-text-sm',
    container_md: 'form-mb-gutter-lg',
    container_lg: 'form-mb-gutter-lg form-text-lg',
    $container: (classes, { Size }) => ([
      classes.container,
      classes[`container_${Size}`],
    ]),
  },
  FormMessages: {
    container: 'bg-green-100 text-green-500 py-3 px-5 rounded form-mb-gutter',
    message: '',
  },
  FormStep: {
    container: 'form-step',
    wrapper: '',
    container_active: 'form-step-active',
    container_inactive: '',
    container_invalid: 'has-errors',
    container_valid: '',
    container_disabled: 'form-step-disabled',
    container_enabled: '',
    container_completed: 'form-step-completed',
    container_incompleted: '',
    container_pending: 'form-step-pending',
    $container: (classes, { active, isDisabled, completed, invalid, pending }) => ([
      classes.container,
      active ? classes.container_active : classes.container_inactive,
      isDisabled ? classes.container_disabled : classes.container_enabled,
      completed ? classes.container_completed : classes.container_incompleted,
      invalid ? classes.container_invalid : classes.container_valid,
      pending ? classes.container_pending : null,
    ]),
  },
  FormSteps: {
    container: 'flex justify-between overflow-x-auto pt-5',
    container_sm: 'form-mb-gutter form-text-sm',
    container_md: 'form-mb-gutter-lg',
    container_lg: 'form-mb-gutter-lg form-text-lg',
    $container: (classes, { Size }) => ([
      classes.container,
      classes[`container_${Size}`],
    ]),
  },
  FormStepsControl: {
    button: 'focus:form-ring focus:outline-none disabled:pointer-events-none disabled:opacity-60 disabled:cursor-not-allowed',
    button_previous_enabled: 'text-gray-700 bg-gray-200 transition hover-not-disabled:bg-gray-300',
    button_previous_disabled: 'text-gray-700 bg-gray-200 opacity-60 pointer-events-none',
    button_next_enabled: 'form-bg-primary text-white transition hover:form-bg-primary-darker',
    button_next_disabled: 'form-bg-primary text-white opacity-60 pointer-events-none cursor-not-allowed',
    button_next_loading: 'form-bg-primary text-white form-bg-spinner-white',
    button_finish_enabled: 'form-bg-primary text-white transition hover:form-bg-primary-darker',
    button_finish_disabled: 'form-bg-primary text-white opacity-60 pointer-events-none cursor-not-allowed',
    button_finish_loading: 'form-bg-primary text-white form-bg-spinner-white',
    button_sm: 'form-p-button-sm form-rounded-sm',
    button_md: 'form-p-button form-rounded',
    button_lg: 'form-p-button-lg form-rounded-lg',
    $button: (classes, { isDisabled, isLoading, type, Size }) => ([
      classes.button,
      classes[`button_${Size}`],
      isDisabled ? classes[`button_${type}_disabled`] : classes[`button_${type}_enabled`],
      isLoading ? classes[`button_${type}_loading`] : null,
    ]),
  },
  FormStepsControls: {
    container: 'flex justify-between',
    container_sm: 'form-mt-gutter form-text-sm',
    container_md: 'form-mt-gutter-lg',
    container_lg: 'form-mt-gutter-lg form-text-lg',
    $container: (classes, { Size }) => ([
      classes.container,
      classes[`container_${Size}`],
    ]),
  },
  FormTab: {
    container: '',
    wrapper: 'block bg-white -mb-px',
    wrapper_active: 'border form-border-color !form-border-b-white rounded-tl rounded-tr',
    wrapper_inactive: 'border border-white form-border-b-color',
    wrapper_valid: '',
    wrapper_invalid: 'text-red-500',
    wrapper_sm: 'py-1.5 px-3.5',
    wrapper_md: 'py-2 px-4',
    wrapper_lg: 'py-2 px-4',
    $container: (classes, {}) => ([
      classes.container,
    ]),
    $wrapper: (classes, { active, invalid, Size }) => ([
      classes.wrapper,
      classes[`wrapper_${Size}`],
      active ? classes.wrapper_active : classes.wrapper_inactive,
      invalid ? classes.wrapper_invalid : classes.wrapper_valid,
    ]),
  },
  FormTabs: {
    container: 'flex border-b form-border-color items-end',
    container_sm: 'form-mb-gutter form-text-sm',
    container_md: 'form-mb-gutter-lg',
    container_lg: 'form-mb-gutter-lg form-text-lg',
    $container: (classes, { Size }) => ([
      classes.container,
      classes[`container_${Size}`],
    ]),
  },
  Vueform: {
    form: '',
  },

  // Slots
  CheckboxgroupCheckbox: {
    ...checkbox,
    container: 'flex align-start cursor-pointer',
    text: '',
  },
  CheckboxgroupCheckbox_pills: {
    container: 'flex align-start cursor-pointer',
    wrapper: 'flex items-center justify-center border py-1.5 w-full bg-white',
    wrapper_not_last: 'border-r-0',
    wrapper_first: 'rounded-l-md',
    wrapper_last: 'rounded-r-md',
    wrapper_selected: 'bg-green-500 text-white border-green-400',
    wrapper_unselected: 'border-gray-300',
    wrapper_disabled: 'opacity-50',
    wrapper_sm: 'form-p-input-sm form-text-sm',
    wrapper_md: 'form-p-input',
    wrapper_lg: 'form-p-input-lg form-text-lg',
    input: 'hidden',
    text: '',
    $wrapper: (classes, { index, items, el$, value, isDisabled, Size }) => ([
      classes.wrapper,
      classes[`wrapper_${Size}`],
      index < Object.keys(items).length - 1 ? classes.wrapper_not_last : null,
      index === 0 ? classes.wrapper_first : null,
      index === Object.keys(items).length - 1 ? classes.wrapper_last : null,
      el$.value.indexOf(value) !== -1 ? classes.wrapper_selected : classes.wrapper_unselected,
      isDisabled ? classes.wrapper_disabled : null,
    ])
  },
  CheckboxgroupCheckbox_blocks: {
    ...checkbox,
    container: 'flex align-start cursor-pointer',
    wrapper: 'flex items-center border border-gray-300 w-full px-4 py-3 bg-white',
    wrapper_not_last: 'border-b-0',
    wrapper_first: 'rounded-t-lg',
    wrapper_last: 'rounded-b-lg',
    wrapper_selected: 'bg-gray-100',
    wrapper_unselected: 'border-gray-300',
    wrapper_disabled: 'opacity-50',
    wrapper_sm: 'px-4 py-2.5 form-text-sm',
    wrapper_md: 'px-4 py-3',
    wrapper_lg: 'px-4 py-3.5 form-text-lg',
    text_wrapper: 'ml-2',
    text: '',
    description: 'text-gray-500',
    description_sm: 'text-0.5sm -mt-0.5',
    description_md: 'text-sm -mt-0.5',
    description_lg: 'text-sm -mt-0.5',
    $wrapper: (classes, { index, items, el$, value, isDisabled, Size }) => ([
      classes.wrapper,
      classes[`wrapper_${Size}`],
      index < Object.keys(items).length - 1 ? classes.wrapper_not_last : null,
      index === 0 ? classes.wrapper_first : null,
      index === Object.keys(items).length - 1 ? classes.wrapper_last : null,
      el$.value.indexOf(value) !== -1 ? classes.wrapper_selected : classes.wrapper_unselected,
      isDisabled ? classes.wrapper_disabled : null,
    ]),
    $description: (classes, { Size }) => ([
      classes.description,
      classes[`description_${Size}`],
    ]),
  },
  FilePreview: {
    container: 'flex justify-start flex-row group relative',
    container_sm: 'form-py-input-border-sm',
    container_md: 'form-py-input-border',
    container_lg: 'form-py-input-border-lg',
    wrapper: 'flex justify-between items-center w-full',
    file: 'flex items-center',
    filenameLink: 'hover:underline',
    filenameStatic: '',
    actions: 'flex items-center',
    percent: 'flex justify-between items-center text-sm text-gray-500 group-hover:form-hidden',
    upload: 'form-bg-primary text-white form-rounded text-xs py-0.5 px-1.5 ml-1.5 whitespace-nowrap transition hover:form-bg-primary-darker focus:form-ring',
    progressBar: 'bg-gray-200 h-0.75 absolute bottom-0 w-full',
    progress: 'w-0 form-bg-primary transition-all ease-out duration-500 h-0.75',
    warning: 'flex w-4 h-4 items-center justify-center bg-red-200 rounded-full group-hover:form-hidden',
    warningIcon: 'mask-bg mask-form-exclamation-solid bg-red-500 mask-size-2.5 block w-full h-full',
    uploaded: 'flex w-4 h-4 items-center justify-center bg-green-200 rounded-full group-hover:form-hidden',
    uploadedIcon: 'mask-bg mask-form-check-solid bg-green-500 mask-size-2.5 block w-full h-full',
    remove: 'flex w-4 h-4 items-center justify-center bg-gray-200 rounded-full transition hover:bg-gray-300 form-hidden group-hover:form-inline-block',
    removeIcon: 'mask-bg mask-form-remove-light bg-black mask-size-3 block w-full h-full',
    $container: (classes, { Size }) => ([
      classes.container,
      classes[`container_${Size}`],
    ])
  },
  FilePreview_gallery: {
    container: 'flex justify-start flex-col transition duration-500 relative group',
    container_sm: 'form-w-gallery-sm form-h-gallery-sm',
    container_md: 'form-w-gallery form-h-gallery',
    container_lg: 'form-w-gallery-lg form-h-gallery-lg',
    image: 'w-full h-full bg-gray-100',
    image_sm: 'form-rounded-sm',
    image_md: 'form-rounded',
    image_lg: 'form-rounded-lg',
    image_link: '',
    image_static: '',
    img: 'w-full h-full object-cover form-hide-empty-img',
    img_sm: 'form-rounded-sm',
    img_md: 'form-rounded',
    img_lg: 'form-rounded-lg',
    overlay: 'absolute inset-0 bg-white bg-opacity-50 transition duration-300 opacity-0 invisible flex items-center justify-center p-3 form-rounded group-hover:form-visible group-hover:opacity-100',
    overlay_sm: 'form-rounded-sm',
    overlay_md: 'form-rounded',
    overlay_lg: 'form-rounded-lg',
    upload: 'relative z-1 form-bg-primary text-white bg-opacity-100 form-rounded text-xs py-0.5 px-1.5 whitespace-nowrap transition hover:form-bg-primary-darker focus:form-ring',
    progressBar: 'bg-white absolute left-1 right-1 bottom-1 h-0.75',
    progress: 'w-0 form-bg-primary transition-all ease-out duration-500 h-0.75',
    warning: 'absolute right-0.5 bottom-0.5 mr-px mb-px flex w-4 h-4 items-center justify-center bg-red-200 rounded-full',
    warningIcon: 'mask-bg mask-form-exclamation-solid bg-red-500 mask-size-2.5 block w-full h-full',
    uploaded: 'absolute right-0.5 bottom-0.5 mr-px mb-px flex w-4 h-4 items-center justify-center bg-green-200 rounded-full',
    uploadedIcon: 'mask-bg mask-form-check-solid bg-green-500 mask-size-2.5 block w-full h-full',
    remove: 'flex w-4 h-4 items-center justify-center bg-gray-200 absolute top-0.5 right-0.5 mt-px mr-px form-hidden rounded-full transition hover:bg-gray-300 group-hover:form-inline-block ',
    removeIcon: 'mask-bg mask-form-remove-light bg-black mask-size-3 block w-full h-full',
    $container: (classes, { Size }) => ([
      classes.container,
      classes[`container_${Size}`],
    ]),
    $image: (classes, { Size }) => ([
      classes.image,
      classes[`image_${Size}`],
    ]),
    $img: (classes, { Size }) => ([
      classes.img,
      classes[`img_${Size}`],
    ]),
    $overlay: (classes, { Size }) => ([
      classes.overlay,
      classes[`overlay_${Size}`],
    ]),
  },
  FilePreview_image: {
    container: 'flex justify-start flex-row group relative',
    wrapper: 'flex justify-between items-center w-full',
    image: 'flex items-center bg-gray-100 flex-grow-0 flex-shrink-0',
    image_link: '',
    image_static: '',
    image_sm: 'form-rounded-sm',
    image_md: 'form-rounded',
    image_lg: 'form-rounded-lg',
    img: 'form-w-input-height form-h-input-height form-rounded form-hide-empty-img object-cover',
    img_sm: 'form-w-input-height-sm form-h-input-height-sm form-rounded-sm',
    img_md: 'form-w-input-height form-h-input-height form-rounded',
    img_lg: 'form-w-input-height-lg form-h-input-height-lg form-rounded-lg',
    file: 'flex items-center flex-grow flex-shrink ml-2.5',
    filenameLink: 'hover:underline',
    filenameStatic: '',
    actions: 'flex items-center',
    percent: 'flex justify-between items-center text-sm text-gray-500 group-hover:form-hidden',
    upload: 'form-bg-primary text-white form-rounded text-xs py-0.5 px-1.5 ml-1.5 whitespace-nowrap transition hover:form-bg-primary-darker focus:form-ring',
    progressBar: 'bg-gray-200 h-0.75 form-left-input ml-2.5 absolute bottom-0 right-0',
    progress: 'w-0 form-bg-primary transition-all ease-out duration-500 h-0.75',
    warning: 'flex w-4 h-4 items-center justify-center bg-red-200 rounded-full group-hover:form-hidden',
    warningIcon: 'mask-bg mask-form-exclamation-solid bg-red-500 mask-size-2.5 block w-full h-full',
    uploaded: 'flex w-4 h-4 items-center justify-center bg-green-200 rounded-full group-hover:form-hidden',
    uploadedIcon: 'mask-bg mask-form-check-solid bg-green-500 mask-size-2.5 block w-full h-full',
    remove: 'flex w-4 h-4 items-center justify-center bg-gray-200 rounded-full transition hover:bg-gray-300 form-hidden group-hover:form-inline-block',
    removeIcon: 'mask-bg mask-form-remove-light bg-black mask-size-3 block w-full h-full',
    $image: (classes, { hasLink, Size }) => ([
      classes.image,
      classes[`image_${Size}`],
      hasLink ? classes.image_link : classes.image_static
    ]),
    $img: (classes, { Size }) => ([
      classes.img,
      classes[`img_${Size}`],
    ])
  },
  RadiogroupRadio: {
    ...radio,
    container: 'flex align-start cursor-pointer',
    text: '',
  },
  RadiogroupRadio_pills: {
    container: 'flex align-start cursor-pointer',
    wrapper: 'flex items-center justify-center border py-1.5 w-full bg-white',
    wrapper_not_last: 'border-r-0',
    wrapper_first: 'rounded-l-md',
    wrapper_last: 'rounded-r-md',
    wrapper_selected: 'bg-green-500 text-white border-green-400',
    wrapper_unselected: 'border-gray-300',
    wrapper_disabled: 'opacity-50',
    wrapper_sm: 'form-p-input-sm form-text-sm',
    wrapper_md: 'form-p-input',
    wrapper_lg: 'form-p-input-lg form-text-lg',
    input: 'hidden',
    text: '',
    $wrapper: (classes, { index, items, el$, value, isDisabled, Size }) => ([
      classes.wrapper,
      classes[`wrapper_${Size}`],
      index < Object.keys(items).length - 1 ? classes.wrapper_not_last : null,
      index === 0 ? classes.wrapper_first : null,
      index === Object.keys(items).length - 1 ? classes.wrapper_last : null,
      el$.value == value ? classes.wrapper_selected : classes.wrapper_unselected,
      isDisabled ? classes.wrapper_disabled : null,
    ])
  },
  RadiogroupRadio_blocks: {
    ...radio,
    container: 'flex align-start cursor-pointer',
    wrapper: 'flex items-center border border-gray-300 w-full px-4 py-3 bg-white',
    wrapper_not_last: 'border-b-0',
    wrapper_first: 'rounded-t-lg',
    wrapper_last: 'rounded-b-lg',
    wrapper_selected: 'bg-gray-100',
    wrapper_unselected: 'border-gray-300',
    wrapper_disabled: 'opacity-50',
    wrapper_sm: 'px-4 py-2.5 form-text-sm',
    wrapper_md: 'px-4 py-3',
    wrapper_lg: 'px-4 py-3.5 form-text-lg',
    text_wrapper: 'ml-2',
    text: '',
    description: 'text-gray-500',
    description_sm: 'text-0.5sm -mt-0.5',
    description_md: 'text-sm -mt-0.5',
    description_lg: 'text-sm -mt-0.5',
    $wrapper: (classes, { index, items, el$, value, isDisabled, Size }) => ([
      classes.wrapper,
      classes[`wrapper_${Size}`],
      index < Object.keys(items).length - 1 ? classes.wrapper_not_last : null,
      index === 0 ? classes.wrapper_first : null,
      index === Object.keys(items).length - 1 ? classes.wrapper_last : null,
      el$.value == value ? classes.wrapper_selected : classes.wrapper_unselected,
      isDisabled ? classes.wrapper_disabled : null,
    ]),
    $description: (classes, { Size }) => ([
      classes.description,
      classes[`description_${Size}`],
    ]),
  },
}